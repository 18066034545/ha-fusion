function a(t){if(!(!t||t.length===0))return t[Math.floor(Math.random()*t.length)]}function v(t){if(t===void 0)return;const i=Object.values(t).filter(s=>s.attributes&&"unit_of_measurement"in s.attributes&&s.attributes.unit_of_measurement==="%"&&!isNaN(parseFloat(s.state))),e=a(i);return e==null?void 0:e.entity_id}function h(t){if(t===void 0)return;const i=Object.values(t).filter(r=>r.entity_id.startsWith("binary_sensor.")||r.entity_id.startsWith("sensor.")),e=i.filter(r=>r.state&&r.state.length>5&&!["unavailable","unknown"].includes(r.state)),s=a(e);if(s)return s.entity_id;{const r=a(i);return r==null?void 0:r.entity_id}}function g(t){if(t===void 0)return;const i=Object.values(t).filter(e=>e.entity_id.startsWith("timer."));return i.length?a(i).entity_id:void 0}function b(t){if(t===void 0)return;const i=Object.values(t).filter(e=>e.entity_id.startsWith("media_player."));return i.length?a(i).entity_id:void 0}function m(t){if(t===void 0)return;const i=Object.values(t).filter(e=>e.state==="on"||e.state==="off");return i.length?a(i).entity_id:void 0}function y(t){if(t===void 0)return;const i=Object.values(t).filter(e=>e.entity_id.startsWith("weather."));return i.length?a(i).entity_id:void 0}function p(t){if(t===void 0)return;const i=Object.values(t).filter(e=>{var s,r;return e.entity_id.startsWith("weather.")&&((s=e==null?void 0:e.attributes)==null?void 0:s.supported_features)&&((r=e==null?void 0:e.attributes)==null?void 0:r.supported_features)>0});return i.length?a(i).entity_id:void 0}function j(t,i,e){t!==void 0&&i.subscribe(async s=>{if(!s){e(void 0);return}try{const[r,d]=await Promise.all([s.sendMessagePromise({type:"recorder/list_statistic_ids"}),s.sendMessagePromise({type:"recorder/validate_statistics"})]),l=Object.values(r).map(n=>{var o;return(o=n==null?void 0:n.statistic_id)!=null&&o.startsWith("sensor.")?n.statistic_id:null}).filter(Boolean),c=new Set(Object.values(d).map(n=>{var o,u;return(u=(o=n[0])==null?void 0:o.data)==null?void 0:u.statistic_id}).filter(Boolean)),f=l.filter(n=>!c.has(n)),_=Object.keys(t).filter(n=>f.includes(n)&&!["unavailable","unknown"].includes(t[n].state));e(a(_))}catch(r){console.error(r),e(void 0)}})}function O(t){if(t===void 0)return;const i=Object.values(t).filter(s=>s.entity_id.startsWith("camera.")),e=a(i);if(e)return e.entity_id}export{h as a,b,j as c,g as d,v as e,m as f,O as g,y as h,p as i};
